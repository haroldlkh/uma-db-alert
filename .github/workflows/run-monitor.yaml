name: Run UMA Monitor (reusable)

on:
  workflow_call:
    inputs:
      dry_run:
        type: boolean
        default: true
      # Let callers supply search config path in their repo (e.g., config/sites.yaml)
      sites_path:
        type: string
        required: false
      # For external callers: which repo/ref has the tool code
      tool_repo:
        type: string
        required: false
      tool_ref:
        type: string
        required: false
        default: "main"
    secrets:
      DISCORD_WEBHOOK_MAIN:
        required: true

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout the CALLER repo (so sites_path works if provided)
      - uses: actions/checkout@v4

      # 2) Checkout the TOOL repo that contains orchestrator/formatters/outputs
      #    When YOU call this from your own repo, you can omit tool_repo
      #    and this will just check out the same repo again under ./tool.
      - name: Checkout tool repo
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.tool_repo || github.repository }}
          ref: ${{ inputs.tool_ref }}
          path: tool

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install -r tool/requirements.txt

      - name: Prepare sites config
        id: cfg
        shell: bash
        run: |
          if [ -n "${{ inputs.sites_yaml }}" ]; then
            printf "%s\n" "${{ inputs.sites_yaml }}" > sites.effective.yaml
          elif [ -n "${{ inputs.sites_path }}" ] && [ -f "${{ inputs.sites_path }}" ]; then
            cp "${{ inputs.sites_path }}" sites.effective.yaml
          else
            cp tool/config/sites.yaml sites.effective.yaml
          fi
          echo "sites=sites.effective.yaml" >> "$GITHUB_OUTPUT"

      # Optional cache (simple rolling key)
      - name: Restore state
        uses: actions/cache/restore@v4
        with:
          path: ~/.uma_monitor
          key: uma-state-v1-${{ github.run_id }}
          restore-keys: uma-state-v1-

      - name: Run orchestrator
        env:
          DISCORD_WEBHOOK_MAIN: ${{ secrets.DISCORD_WEBHOOK_MAIN }}
        run: |
          DRY=""
          if [ "${{ inputs.dry_run }}" = "true" ]; then DRY="--dry-run"; fi
          python tool/orchestrator.py \
            --sites "${{ steps.cfg.outputs.sites }}" \
            --outputs tool/config/outputs.yaml \
            $DRY

      - name: Save state
        if: always()
        uses: actions/cache/save@v4
        with:
          path: ~/.uma_monitor
          key: uma-state-v1-${{ github.run_id }}
